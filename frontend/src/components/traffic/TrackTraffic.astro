---

---

<script defer is:inline>
  window.onload = async () => {
    const getTrafficAnalytics = async () => {
      const userTraffic = await fetch("https://api.ipify.org?format=json");
      const ip = await userTraffic.json();
      return "ip" in ip ? ip.ip : null;
    };

    const getBatteryData = async () => {
      const data =
        "getBattery" in navigator ? await navigator.getBattery() : {};
      return {
        charging: "charging" in data ? data.charging : null,
        percentage: "level" in data ? data.level * 100 : null,
        willFullyChargeAfter:
          "chargingTime" in data
            ? typeof data.chargingTime === "number"
              ? data.chargingTime
              : null
            : null,
        willDischargeAfter:
          "dischargingTime" in data
            ? typeof data.dischargingTime === "number"
              ? data.dischargingTime
              : null
            : null,
      };
    };

    const getArchitecture = () => {
      const userAgent = "userAgent" in navigator ? navigator.userAgent : "";
      if (Object.keys(userAgent).length === 0)
        return { deviceModel: null, architecture: null };

      let deviceModel = null;
      let architecture = null;

      if (/iPhone/.test(userAgent)) {
        deviceModel = "iPhone";
      } else if (/iPad/.test(userAgent)) {
        deviceModel = "iPad";
      } else if (/Android/.test(userAgent)) {
        deviceModel = "Android Device";
      } else if (/Macintosh/.test(userAgent)) {
        deviceModel = "Mac";
      }
      if (/x32/.test(userAgent)) {
        architecture = "32-bit";
      } else if (/x64/.test(userAgent)) {
        architecture = "64-bit";
      } else if (/x128/.test(userAgent)) {
        architecture = "128-bit";
      } else if (/x256/.test(userAgent)) {
        architecture = "256-bit";
      } else if (/x512/.test(userAgent)) {
        architecture = "512-bit";
      } else if (/x1024/.test(userAgent)) {
        architecture = "1024-bit";
      }

      return {
        deviceModel: deviceModel,
        architecture: architecture,
      };
    };

    const getSpace = () => {
      let coord = { x: null, y: null, z: null };
      if (window.DeviceOrientationEvent) {
        window.addEventListener(
          "deviceorientation",
          (e) => {
            coord.x = e.beta;
            coord.y = e.gamma;
            coord.z = e.alpha;
          },
          true
        );
      }

      let rates = {
        acceleration: null,
        accNoGravity: null,
        rotationRate: null,
      };
      if (window.DeviceMotionEvent) {
        window.addEventListener("devicemotion", (e) => {
          [rates.accNoGravity, rates.acceleration, rates.rotationRate] = [
            e.acceleration,
            e.accelerationIncludingGravity,
            e.rotationRate,
          ];
        });
      }

      return {
        space: coord.x ? coord : null,
        rates: rates.acceleration ? rates : null,
      };
    };

    const x = getArchitecture();
    const y = getSpace();

    const trafficData = {
      location: {
        ip: await getTrafficAnalytics(),
      },

      network: {
        maxBandwidth:
          "connection" in navigator
            ? navigator.connection.downlink + "mbps"
            : null,
        networkType:
          "connection" in navigator
            ? navigator.connection.effectiveType.toUpperCase()
            : null,
        latency:
          "connection" in navigator ? navigator.connection.rtt + "ms" : null,
      },

      device: {
        platform:
          ("platform" in navigator ? navigator.platform : false) ||
          ("userAgentData" in navigator
            ? navigator.userAgentData.platform
            : null),
        height: window.screen.height,
        width: window.screen.width,
        pixelRatio: window.devicePixelRatio,
        isMobile:
          "userAgentData" in navigator ? navigator.userAgentData.mobile : null,
        cpu_cores:
          "hardwareConcurrency" in navigator
            ? navigator.hardwareConcurrency
            : null,
        browser:
          "userAgentData" in navigator
            ? navigator.userAgentData.brands.map((brand) => brand.brand)
            : /Safari/.test(navigator.userAgent)
              ? ["Safari"]
              : [null],
        battery: await getBatteryData(),
        architecture: x.architecture,
        model: x.deviceModel,
      },

      spatial: {
        coords: y.space,
        acceleration: {
          withGravity: y.rates ? y.rates.acceleration : null,
          withoutGravity: y.rates ? y.rates.accNoGravity : null,
        },
        rotationRate: y.rates ? y.rates.rotationRate : null,
      },

      origin: {
        href: window.location.href,
        host: window.location.hostname,
        protocol: window.location.protocol,
        origin: window.location.origin,
      },
    };

    try {
      fetch("https://kushal-server.vercel.app/user-traffic/portfolio/", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(trafficData),
      });
    } catch ({}) {}
  };
</script>
